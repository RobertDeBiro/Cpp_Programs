@startuml GetStudies

hide footbox
skinparam ParticipantPadding 50

title Get studies

participant "Study::Static" as S_Study <<rtkplanning>>
participant Study <<rtkplanning>>
participant Database <<rtkplanning>>
participant Statement <<rtkplanning>>
database SQLite

create Database
S_Study -> Database : new()

group Database Constructor
    Database -[#blue]> SQLite : sqlite3_open( "../dcm.db", &db )
    note over SQLite
        Open database file //dcm.db// (create if doesn't exist)
        and save it to ""sqlite3* db""
    end note
    Database -> Database : createTables()
    Database -[#blue]> SQLite : sqlite3_exec( db, schema.sql, ... )
    note over SQLite
        Create tables in //dcm.db//
        defined inside //schema.sql//
    end note
end

S_Study -> Database : statement = createStatement( "query = SELECT ..." )
create Statement
Database -> Statement : new()
group Statement Constructor
    note over Statement
        ""sqlite3* db = db""
        ""std::string& query = query""
    end note
end

S_Study -> Statement : statement->prepare()
Statement -[#blue]> SQLite : sqlite3_prepare_v2( db, query, &stmt, .. )

loop Studies count
    S_Study -> Statement : statement->step()
    Statement -[#blue]> SQLite : sqlite3_step( stmt )
    create Study
    S_Study -> Study : new()
    loop Columns count
        S_Study -> Statement : get*(col_pos)
        Statement -[#blue]> SQLite : sqlite3_column*(stmt, col_pos)
        note over Study
            study column **set**
        end note
    end
    note over S_Study
        study **set**
    end note
end
S_Study -> Statement !!
...After DatabaseModel is constructed...
-> Study !!

@enduml
