@startuml GetPatients

hide footbox
skinparam ParticipantPadding 50

title Get patients

participant "Patient::Static" as S_Patient <<rtkplanning>>
participant Patient <<rtkplanning>>
participant Database <<rtkplanning>>
participant Statement <<rtkplanning>>
database SQLite


S_Patient -> Database : patient = createStatement( "query = SELECT ..." )

create Statement
Database -> Statement : new()
group Statement Constructor
    note over Statement
        ""sqlite3* db = db""
        ""std::string& query = query""
    end note
end

S_Patient -> Statement : statement->prepare()
Statement -[#blue]> SQLite : sqlite3_prepare_v2( db, query, &stmt, .. )

S_Patient -> Statement : statement->bind(uidQueryPos, UID)
Statement -[#blue]> SQLite : sqlite3_bind_int64(stmt, pos + 1, value)

loop Studies count
    S_Patient -> Statement : statement->step()
    Statement -[#blue]> SQLite : sqlite3_step( stmt )
    create Patient
    S_Patient -> Patient : new()
    loop Columns count
        S_Patient -> Statement : get*(col_pos)
        Statement -[#blue]> SQLite : sqlite3_column*(stmt, col_pos)
        note over Patient
            patient column **set**
        end note
    end
    note over S_Patient
        patient **set**
    end note
end
S_Patient -> Statement !!
...After DatabaseModel is constructed...
-> Patient !!

@enduml
